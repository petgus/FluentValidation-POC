@page "/"



<EditForm Model="@newArticle" @onchange="@(() => { StateHasChanged(); })" OnValidSubmit="@SubmitValidForm">
    <FluentValidationValidator />

    <MudCard Style="width:30em">
        <MudCardContent>
            <MudText Typo="Typo.subtitle1">Form validation</MudText>

            <MudTextField @bind-Value="newArticle.ArticleNumber" Label="Article number" For="() => newArticle.ArticleNumber" />

            <MudTextField @bind-Value="newArticle.Name" Label="Name" For="() => newArticle.Name" />

            <MudSelect Label="Status" @bind-Value="newArticle.Status" For="() => newArticle.Status">
                @foreach (var status in Enum.GetValues(typeof(ArticleStatus)))
                {
                    <MudSelectItem T="ArticleStatus" Value="@((ArticleStatus) status)">@status</MudSelectItem>
                }
            </MudSelect>

        </MudCardContent>
        <MudCardActions>

            @*<ValidationSummary />*@
            <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Save</MudButton>
        </MudCardActions>
    </MudCard>

</EditForm>

<MudCard Style="width:30em; margin-left:20px">
    <MudCardContent>
        <MudText Typo="Typo.subtitle1">Article JSON</MudText>
        <pre>
        <code>
            @System.Text.Json.JsonSerializer.Serialize(newArticle, jsonOptions)
        </code>
        </pre>
    </MudCardContent>
</MudCard>

@code{

    Article newArticle = new Article();

    System.Text.Json.JsonSerializerOptions jsonOptions = new System.Text.Json.JsonSerializerOptions() { WriteIndented = true };

    void SubmitValidForm()
    {
        Console.WriteLine("Form Submitted Successfully!");
    }

}
